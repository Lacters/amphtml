workspace(name = "validator")

load("@bazel_tools//tools/build_defs/repo:http.bzl", "http_archive")

http_archive(
    name = "com_google_absl",
    sha256 = "dd0ee4f9a4d244357eecceb8275d80f6cf75dc54a46a75e1a2160bfff1f03642",
    strip_prefix = "abseil-cpp-34604d5b1f6ae14c65b3992478b59f7108051979",
    urls = ["https://github.com/abseil/abseil-cpp/archive/34604d5b1f6ae14c65b3992478b59f7108051979.zip"],
)

http_archive(
    name = "com_google_googletest",
    sha256 = "ac3820171dbdd1ff932389d18d3787bcafffe2639c4316f09c58349f24696148",
    strip_prefix = "googletest-b75ecf1bed2fcd416b66c86cb6fe79122abf132e",
    urls = ["https://github.com/google/googletest/archive/b75ecf1bed2fcd416b66c86cb6fe79122abf132e.zip"],  # 2019-01-07
)

http_archive(
    name = "com_google_protobuf",
    sha256 = "5d5c8c42e2b91d996127d4cd4befb85662031e7ee138ddb27210ac58fb268b60",
    strip_prefix = "protobuf-4d3931d626a2311a95a73faf8de333554cd448cf",
    urls = ["https://github.com/protocolbuffers/protobuf/archive/4d3931d626a2311a95a73faf8de333554cd448cf.zip"],
)
load("@com_google_protobuf//:protobuf_deps.bzl", "protobuf_deps")
protobuf_deps()

http_archive(
    name = "com_github_gflags_gflags",
    sha256 = "017e0a91531bfc45be9eaf07e4d8fed33c488b90b58509dbd2e33a33b2648ae6",
    strip_prefix = "gflags-a738fdf9338412f83ab3f26f31ac11ed3f3ec4bd",
    urls = ["https://github.com/gflags/gflags/archive/a738fdf9338412f83ab3f26f31ac11ed3f3ec4bd.zip"],
)

http_archive(
    name = "com_googlesource_code_re2",
    sha256 = "ee805a8025424b0870b2e7a910c7674474669949cd00321661b589ee4f5ae8ad",
    strip_prefix = "re2-b4c6fe091b74b65f706ff9c9ff369b396c2a3177",
    urls = ["https://github.com/google/re2/archive/b4c6fe091b74b65f706ff9c9ff369b396c2a3177.zip"],
)

# rules_cc defines rules for generating C++ code from Protocol Buffers.
http_archive(
    name = "rules_cc",
    sha256 = "ad66eb77e008ff5a1bbfba68a43cb3cf079c2ea89d2b1f7fddabd6632ff6498d",
    strip_prefix = "rules_cc-833f17060cb7c68778e79f121172ed93b10ca46e",
    urls = ["https://github.com/bazelbuild/rules_cc/archive/833f17060cb7c68778e79f121172ed93b10ca46e.zip"],
)
load("@rules_cc//cc:repositories.bzl", "rules_cc_dependencies")
rules_cc_dependencies()

# rules_proto defines abstract rules for building Protocol Buffers.
http_archive(
    name = "rules_proto",
    sha256 = "c189be38eb02700614712e25eb0f81fda02794eb98841df6a99d42633065d996",
    strip_prefix = "rules_proto-dec2b5cfe965c00eb49d7d4ca7b6a44f9667bbe5",
    urls = [
        "https://mirror.bazel.build/github.com/bazelbuild/rules_proto/archive/dec2b5cfe965c00eb49d7d4ca7b6a44f9667bbe5.tar.gz",
        "https://github.com/bazelbuild/rules_proto/archive/dec2b5cfe965c00eb49d7d4ca7b6a44f9667bbe5.tar.gz",
    ],
)
load("@rules_proto//proto:repositories.bzl", "rules_proto_dependencies", "rules_proto_toolchains")
rules_proto_dependencies()
rules_proto_toolchains()

http_archive(
    name = "emsdk",
    sha256 = "9adce979c99b7d172c5542403150729e58dc311937aa9d245438447e26cae908",
    strip_prefix = "emsdk-2aa74907151b2caa9da865fd0d36436fdce792f0/bazel",
    url = "https://github.com/emscripten-core/emsdk/archive/2aa74907151b2caa9da865fd0d36436fdce792f0.tar.gz",
)

load("@emsdk//:deps.bzl", emsdk_deps = "deps")
emsdk_deps()

load("@emsdk//:emscripten_deps.bzl", emsdk_emscripten_deps = "emscripten_deps")
emsdk_emscripten_deps(emscripten_version = "2.0.31")

http_archive(
    name = "com_google_javascript_closure_library",
    sha256 = "90235e587dbc968a854ab11ac358c3a0fa57b4c121f540880419203dfe3cfa46",
    strip_prefix = "closure-library-7818ff7dc0b53555a7fb3c3427e6761e88bde3a2",
    urls = ["https://github.com/google/closure-library/archive/7818ff7dc0b53555a7fb3c3427e6761e88bde3a2.tar.gz"],
)

http_archive(
    name = "io_bazel_rules_closure",
    sha256 = "9498e57368efb82b985db1ed426a767cbf1ba0398fd7aed632fc3908654e1b1e",
    strip_prefix = "rules_closure-0.12.0",
    urls = [
        "https://mirror.bazel.build/github.com/bazelbuild/rules_closure/archive/0.12.0.tar.gz",
        "https://github.com/bazelbuild/rules_closure/archive/0.12.0.tar.gz",
    ],
)

load("@io_bazel_rules_closure//closure:repositories.bzl", "rules_closure_dependencies", "rules_closure_toolchains")
rules_closure_dependencies()
rules_closure_toolchains()

local_repository(
    name = "amphtml-extensions",
    path = "../extensions",
)
